1. Empresa con m√°s habitaciones registradas
SELECT 
e.nombres AS "Empresa",
  (
    SELECT COUNT(*) 
    FROM habitaciones AS h 
    WHERE h.id_empresa = e.id
  ) AS "N√∫mero de Habitaciones",
  'Esta es la empresa con m√°s habitaciones registradas' AS observacion
FROM usuarios e
WHERE (
  SELECT COUNT(*) 
  FROM habitaciones AS h 
  WHERE h.id_empresa = e.id
) = (
  SELECT MAX(conteo)
  FROM (
    SELECT COUNT(*) AS conteo
    FROM habitaciones
    GROUP BY id_empresa
  ) AS sub
);
üìå Qu√© hace y por qu√© se hizo as√≠:

Esta consulta busca cu√°l es la empresa que tiene registradas m√°s habitaciones en el sistema. Lo hicimos utilizando una subconsulta que cuenta las habitaciones por empresa y la compara con el m√°ximo general.

üìå Para qu√© es √∫til:

Nos permite identificar cu√°l de nuestras empresas tiene m√°s oferta. Esto es muy √∫til si queremos destacar su marca en la plataforma o negociar beneficios especiales por su participaci√≥n activa.

üìå Importancia en el sistema:

Implementar este tipo de reconocimiento impulsa a las empresas a registrar m√°s habitaciones, lo que a su vez enriquece la plataforma con m√°s opciones para los usuarios.
2. Habitaci√≥n con m√°s reservas en el sistema
SELECT 
  h.nombre AS "Habitaci√≥n",
  (
    SELECT COUNT(*) 
    FROM reservas r 
    WHERE r.id_habitacion = h.id
  ) AS "N√∫mero de Reservas",
  'Esta es la habitaci√≥n con m√°s reservas en el sistema' AS observacion
FROM habitaciones AS h
WHERE (
  SELECT COUNT(*) 
  FROM reservas AS r 
  WHERE r.id_habitacion = h.id
) = (
  SELECT MAX(total)
  FROM (
    SELECT COUNT(*) AS total
    FROM reservas
    GROUP BY id_habitacion
  ) AS sub
);
üìå Qu√© hace y por qu√© se hizo as√≠:

Busca la habitaci√≥n m√°s popular, es decir, la que ha sido reservada m√°s veces. Usamos subconsultas anidadas para asegurar que devolvemos √∫nicamente esa habitaci√≥n con el conteo m√°s alto.

üìå Para qu√© sirve:

Sirve para identificar qu√© tipo de habitaci√≥n prefieren los usuarios. Con esta informaci√≥n podemos tomar decisiones como replicar ese estilo, mejorar el marketing o incluso subir su precio estrat√©gicamente.

üìå Importancia en el sistema:

Visualmente podemos destacar esta habitaci√≥n como ‚Äúla m√°s reservada‚Äù y guiar a nuevos usuarios hacia opciones probadas y confiables.


3. Usuario con m√°s pagos registrados 
SELECT 
  u.nombres,
  u.apellidos,
  (
    SELECT COUNT(*) 
    FROM historial_pagos AS hp 
    WHERE hp.id_usuario = u.id
  ) AS "Pagos Realizados",
  'Este usuario es quien m√°s pagos ha realizado' AS observacion
FROM usuarios u
WHERE (
  SELECT COUNT(*) 
  FROM historial_pagos AS hp 
  WHERE hp.id_usuario = u.id
) = (
  SELECT MAX(total)
  FROM (
    SELECT COUNT(*) AS total
    FROM historial_pagos
    GROUP BY id_usuario
  ) AS sub
);
üìå Qu√© hace y por qu√© se hizo as√≠:

Identifica al usuario que m√°s pagos ha realizado. Se utiliz√≥ una estructura similar a las consultas anteriores para asegurar que solo obtenemos al top 1.

üìå Para qu√© es √∫til:

Este usuario probablemente sea uno de los m√°s constantes y comprometidos. Conocerlo nos permite considerarlo para programas de lealtad, descuentos o funciones beta.

üìå Importancia en el sistema:

Reconocer a los usuarios activos econ√≥micamente puede mejorar la retenci√≥n y fomentar mayor confianza en nuestra plataforma.
4. Usuario con mas reservas
SELECT 
  u.nombres,
  u.apellidos,
  (
    SELECT COUNT(*) 
    FROM reservas AS r 
    WHERE r.id_usuario = u.id
  ) AS total_reservas,
  'Este usuario tiene el mayor n√∫mero de reservas' AS observacion
FROM usuarios u
WHERE (
  SELECT COUNT(*) 
  FROM reservas AS r 
  WHERE r.id_usuario = u.id
) = (
  SELECT MAX(total)
  FROM (
    SELECT COUNT(*) AS total
    FROM reservas
    GROUP BY id_usuario
  ) AS conteo
);
üìå Qu√© hace y por qu√© se hizo as√≠:

Devuelve al usuario que m√°s ha reservado. Se dise√±√≥ usando subconsultas que agrupan las reservas por usuario y seleccionan el mayor.

üìå Para qu√© sirve:

Nos ayuda a ver qui√©n es el cliente m√°s frecuente. Podemos usar esto para darle beneficios especiales o simplemente para mostrarlo como un ejemplo de fidelidad.

üìå Importancia en el sistema:

Este tipo de reconocimiento motiva a otros usuarios a reservar m√°s y tambi√©n le da un toque humano a la plataforma: nuestros usuarios no son solo datos, son personas que podemos premiar.
